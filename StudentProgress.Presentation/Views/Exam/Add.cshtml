@model StudentProgress.BusinessLogic.Requests.ExamRequest
@using StudentProgress.BusinessLogic.Services.Interfaces
@using StudentProgress.DataAccess.Data.Enum
@inject ITestService testService
@inject IStudentService studentService

<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 style="text-align:center">Add new exam record</h2>
            <hr />
        </div>
        <div class="mb-3">
            <label class="form-label">Student Name</label>
            <select asp-for="StudentId" asp-items="@(await GetStudents())" class="form-control">
                <option value="">Select Student</option>
            </select>
        </div>

        <div class="mb-3">
            <label class="form-label">Test Type</label>
            <select asp-for="TestId" asp-items="@(await GetTestTypes())" class="form-control">
                <option value="">Select Test Type</option>
            </select>
        </div>

        <div class="mb-3">
            <label class="form-label">Point</label>
            <input asp-for="Point" class="form-control" />
        </div>

        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-primary btn-sm" style="width:150px;">
                Add
            </button>
        </div>
    </div>
</form>

@functions{
    private async Task<List<SelectListItem>> GetStudents()
    {
        var students = await studentService.GetAllStudentsAsync();

        return students.Select(x => new SelectListItem
            {
                Text = x.FullName,
                Value = x.Id.ToString(),
                // Selected = x.Id == Model.StudentId
            })
            .ToList();
    }

    private async Task<List<SelectListItem>> GetTestTypes()
    {
        var testTypes = await testService.GetAllTestsAsync();

        return testTypes.Select(x => new SelectListItem
            {
                Text = x.TypeOfTest.ToString() + " " + x.DateTime,
                Value = x.Id.ToString()
            })
            .ToList();
    }
}
